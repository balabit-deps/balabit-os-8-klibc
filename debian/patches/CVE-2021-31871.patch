From 2e48a12ab1e30d43498c2d53e878a11a1b5102d5 Mon Sep 17 00:00:00 2001
From: Ben Hutchings <ben@decadent.org.uk>
Date: Wed, 28 Apr 2021 19:46:47 +0200
Subject: [klibc] cpio: Fix possible crash on 64-bit systems

copyin_link() tries to allocate (unsigned int)c_filesize + 1 bytes.
If c_filesize == UINT_MAX, this works out as 0 bytes, resulting in a
null pointer and a subsequent SIGSEGV.

The previous commit made this impossible on 32-bit systems.

CVE-2021-31871

Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
 usr/utils/cpio.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

Index: klibc-2.0.7/usr/utils/cpio.c
===================================================================
--- klibc-2.0.7.orig/usr/utils/cpio.c
+++ klibc-2.0.7/usr/utils/cpio.c
@@ -831,7 +831,7 @@ static void copyin_link(struct new_cpio_
 	char *link_name = NULL;	/* Name of hard and symbolic links.  */
 	int res;		/* Result of various function calls.  */
 
-	link_name = (char *)xmalloc((unsigned int)file_hdr->c_filesize + 1);
+	link_name = (char *)xmalloc(file_hdr->c_filesize + 1);
 	link_name[file_hdr->c_filesize] = '\0';
 	tape_buffered_read(link_name, in_file_des, file_hdr->c_filesize);
 	tape_skip_padding(in_file_des, file_hdr->c_filesize);
